name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "NOTICE.md"
      - "**/*.md"
  pull_request:
    branches: [ main ]
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "NOTICE.md"
      - "**/*.md"

# Cancel in-progress runs on the same branch/PR to save minutes
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Lint & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install project dependencies
        # If requirements.txt exists, install it; otherwise continue.
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Install dev tools (pytest, coverage, ruff, black)
        run: |
          pip install pytest coverage[toml] ruff black

      # ---- Lint (fast, no auto-fix) ----
      - name: Ruff lint
        run: ruff check .

      - name: Black format check
        run: black --check .

      # ---- Tests + Coverage ----
      - name: Run tests with coverage
        run: |
          coverage run -m pytest -q
          coverage report -m
          coverage xml

      # ---- Optional Codecov upload ----
      # Set CODECOV_TOKEN in repo Secrets if needed (private repos usually require it).
      - name: Upload coverage to Codecov
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: false
          verbose: false
